buildscript {
    ext {
        springBootVersion = '2.0.7.RELEASE'
        kotlinVersion = '1.2.71'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath('org.junit.platform:junit-platform-gradle-plugin:1.1.0')
    }
}

plugins {
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.jetbrains.kotlin.plugin.noarg'

noArg {
    annotation("org.springframework.boot.context.properties.ConfigurationPro‌​perties")
}

group = 'com.ozwillo'
version = '0.0.5'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    mavenLocal()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-configuration-processor')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile 'org.springframework.boot:spring-boot-starter-mail'
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")  //updated from jre8 (depreciated)
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('org.apache.commons:commons-lang3:3.7')
    compile('com.google.guava:guava:24.1.1-jre')
    compile('org.codehaus.groovy:groovy')
    compile('org.codehaus.groovy:groovy-templates')

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.codehaus.groovy:groovy:2.4.7')

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: "junit"
    }
    testCompile('com.github.tomakehurst:wiremock-standalone:2.17.0')
    testCompile("io.projectreactor:reactor-test")
    testCompile('org.springframework.amqp:spring-rabbit-test')
    testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo'){
        exclude group: 'org.apache.commons', module: 'commons-compress'
    }

    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.apache.commons:commons-compress:1.18')

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
}

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
}

test {
    useJUnitPlatform()
    environment 'spring.profiles.active', 'test'
}

//task wrapper(type: Wrapper) {
//    // at least 4.6 for JUnit 5 support
//    gradleVersion = '4.7'
//}

bootJar {
    launchScript {
        properties 'initInfoProvides': 'ozwillo-dc-importer'
    }
}

node {
    version = '8.11.3'
    download = false
}

configure(tasks.processResources) {
    // we don't want the JS sources in the jar, we only need their transpiled, bundled version in build/
    exclude "public/src", "public/node_modules/", "public/babel.config.json", "public/.*"
}

def frontendDir = "./src/main/resources/public"

task yarnInstall(type: YarnTask) {
    args = ['--cwd', frontendDir, 'install']
}

task frontBundle(type: YarnTask) {
    args = ['--cwd', frontendDir, 'run', 'build']
}

assemble.dependsOn(frontBundle)
frontBundle.dependsOn(yarnInstall)
jar.dependsOn(frontBundle)